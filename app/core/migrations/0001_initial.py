# Generated by Django 3.0.5 on 2020-05-29 22:33

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('type_user', models.PositiveSmallIntegerField(choices=[(1, 'contributor'), (2, 'creator')], default=1)),
                ('deleted', models.BooleanField(default=False)),
                ('is_activate', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='title')),
                ('excerpt', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('public_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=3, default=0, max_digits=12)),
                ('qty_day', models.PositiveSmallIntegerField(default=0)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'begin'), (2, 'created'), (3, 'revised'), (4, 'acepted'), (5, 'public'), (6, 'completed'), (7, 'terminated'), (8, 'archived'), (9, 'deleted')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name')),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Boliviano', max_length=20)),
                ('symbol', models.CharField(default='$BS', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=150)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=12)),
                ('campaings', models.IntegerField(default=0)),
                ('users', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name')),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=200)),
                ('dni', models.CharField(blank=True, max_length=45)),
                ('country', models.CharField(blank=True, max_length=45)),
                ('city', models.CharField(blank=True, max_length=45)),
                ('complete', models.BooleanField(default=False)),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True)),
                ('current_position', models.CharField(blank=True, max_length=50, null=True)),
                ('current_city', models.CharField(blank=True, max_length=45, null=True)),
                ('headline', models.CharField(blank=True, max_length=50, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('type_pay', models.IntegerField(choices=[(1, 'credit'), (2, 'debit'), (3, 'cash')])),
                ('status_pay', models.IntegerField(choices=[(1, 'pending'), (2, 'complete'), (3, 'rejected')])),
                ('users', models.IntegerField()),
                ('campaings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Campaing')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=200)),
                ('dni', models.CharField(blank=True, max_length=45)),
                ('country', models.CharField(blank=True, max_length=45)),
                ('city', models.CharField(blank=True, max_length=45)),
                ('complete', models.BooleanField(default=False)),
                ('name', models.CharField(default='my company', max_length=50)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('cellphone', models.CharField(blank=True, max_length=45, null=True)),
                ('email_company', models.EmailField(blank=True, max_length=250, null=True)),
                ('represent', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discuss', models.CharField(max_length=200)),
                ('campaings', models.IntegerField(default=0)),
                ('parentid', models.IntegerField(default=0)),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User')),
            ],
        ),
        migrations.AddField(
            model_name='campaing',
            name='categories',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category'),
        ),
        migrations.AddField(
            model_name='campaing',
            name='currencies',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Currency'),
        ),
        migrations.AddField(
            model_name='campaing',
            name='tags',
            field=models.ManyToManyField(to='core.Tag'),
        ),
        migrations.AddField(
            model_name='campaing',
            name='users',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User'),
        ),
        migrations.CreateModel(
            name='Accumulated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, default=0, max_digits=12)),
                ('days_left', models.IntegerField(default=0)),
                ('campaings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Campaing')),
            ],
        ),
    ]
