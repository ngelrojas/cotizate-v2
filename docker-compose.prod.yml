version: '3.7'

services:
    api:
        build: 
            context: ./app
            dockerfile: Dockerfile.prod
        command: gunicorn api.wsgi:application --bind 0.0.0.0:8000
        container_name: 'api_cotizate'
        volumes:
            - static_volume:/home/app/api/api/staticfiles
            - media_volume:/home/app/api/api/mediafiles
        expose:
            - 8000
        env_file:
            - ./.env
        depends_on:
            - db
            - broker
    nginx:
        build: ./nginx
        container_name: 'nginx_cotizate'
        volumes:
            - static_volume:/home/app/api/staticfiles
        ports:
            - 1337:80
        depends_on:
            - api
    db:
        image: postgres:12.0-alpine
        container_name: 'db_cotizate'
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - ./.env-db
    worker:
        build: ./app
        container_name: 'celery_cotizate'
        restart: always 
        env_file:
            - ./.env-broker
        command: celery -A api.celery worker -l INFO 
        volumes:
            - ./app/:/usr/src/app/
        depends_on:
            - broker
    flower:
        image: zoomeranalytics/flower:0.9.1-4.0.2
        container_name: 'flower_cotizate'
        restart: always 
        env_file:
            - ./.env-broker
        ports:
            - 5555:5555
        depends_on:
            - broker
    broker:
        image: rabbitmq:3.6-management-alpine
        hostname: 'cotizatebroker'
        container_name: 'rabbitmq_cotizate'
        env_file:
            - ./.env-broker
        ports:
            - 5672:5672
            - 15672:15672
        expose:
          - 5672

volumes:
    postgres_data:
    static_volume:
    media_volume:
